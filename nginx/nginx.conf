worker_processes  auto;

events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 32 16k;
    gzip_http_version 1.1;
    gzip_min_length 250;
    gzip_types image/jpeg image/bmp image/svg+xml text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon;

	add_header X-Cache-Status $upstream_cache_status;

	# security headers
	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header Referrer-Policy "no-referrer-when-downgrade" always;
	add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    upstream api_upstream {
		server api:8000;
	}

	server {
		listen      80;
		listen [::]:80;
		server_name server.vidrox.me;

		location / {
			rewrite ^ https://$host$request_uri? permanent;
		}

		#certbot challenges
		location ~ /.well-known/acme-challenge {
			allow all;
			root /data/letsencrypt;
		}
	}

	server {
	
		# PageSpeed
		pagespeed on;

		server_name server.vidrox.me;
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		
		server_tokens off;
		

		ssl_buffer_size 8k;
		ssl_dhparam /etc/ssl/certs/dh-2048.pem;

		# SSL Settings
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;
		ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
	   
		# Optimize session cache
		ssl_session_cache shared:SSL:50m;
		ssl_session_timeout 1d;
	   
		# Enable session tickets
		ssl_session_tickets on;

		ssl_ecdh_curve secp384r1;

		# OCSP stapling
		ssl_stapling on;
		ssl_stapling_verify on;
		resolver 8.8.8.8 8.8.4.4;

		ssl_certificate	/etc/letsencrypt/live/server.vidrox.me/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/server.vidrox.me/privkey.pem;

		## PageSpeed filter settings
		pagespeed RewriteLevel CoreFilters;
		pagespeed RespectVary off;
		pagespeed DisableRewriteOnNoTransform off;
		pagespeed SupportNoScriptEnabled false;
		pagespeed ModifyCachingHeaders on;
		pagespeed ListOutstandingUrlsOnError on;
		pagespeed MaxCacheableContentLength -1;
		pagespeed FileCachePath /var/cache/nginx/pagespeed;
		pagespeed FileCacheSizeKb            102400;
		pagespeed FileCacheCleanIntervalMs   3600000;
		pagespeed FileCacheInodeLimit        500000;
		
		pagespeed EnableFilters prioritize_critical_css;
		
		# Pagespeed Module
		## PageSpeed configurations
		pagespeed FetchHttps enable,allow_self_signed;

		## Miscellaneous
		pagespeed EnableFilters add_instrumentation;
		pagespeed EnableFilters insert_dns_prefetch;

		## Cache
		pagespeed EnableFilters extend_cache;
		pagespeed EnableFilters extend_cache_pdfs;
		pagespeed EnableFilters local_storage_cache;

		## Ensure requests for pagespeed optimized resources go to the pagespeed handler
		## and no extraneous headers get set.
		location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
		  add_header "" "";
		}
		location ~ "^/pagespeed_static/" { }
		location ~ "^/ngx_pagespeed_beacon$ps_dollar" { }

		location ~ ^/api {
			proxy_pass http://api_upstream;
			proxy_redirect default;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
		}
		
		location ~ ^/oauth {
			proxy_pass http://api_upstream;
			proxy_redirect off;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
		}
		
		location ~ ^/admin {
			proxy_pass http://api_upstream;
			proxy_redirect default;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
		}
		
		location / {
			root /docker-frontend/build/;
			try_files $uri /index.html;
			add_header Cache-Control "no-store, no-cache, must-revalidate";
		}
		
		location /static/ {
			alias /docker-frontend/build/static/;
			expires 1y;
			add_header Cache-Control "public";
			access_log off;
		}
		
		location /staticfiles/ {
			alias /docker-api/staticfiles/;
		}

		location /mediafiles/ {
			alias /docker-api/mediafiles/;
		}
	}
}
